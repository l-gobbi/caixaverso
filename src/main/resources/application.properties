# ===================================================
# CONFIGURAÇÕES GERAIS (USADAS EM TODOS OS PERFIS)
# ===================================================
# FONTE DE DADOS PADRÃO (POSTGRESQL)
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=seu_usuario
quarkus.datasource.password=sua_senha

# FONTE DE DADOS NOMEADA (SQL SERVER)
quarkus.datasource.consulta.db-kind=mssql
quarkus.datasource.consulta.username=hack
quarkus.datasource.consulta.password=Password23

# HIBERNATE ORM PADRÃO
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.packages=org.acme.model.simulacao

# HIBERNATE ORM "CONSULTA"
quarkus.hibernate-orm.consulta.datasource=consulta
quarkus.hibernate-orm.consulta.packages=org.acme.model.produto
quarkus.hibernate-orm.consulta.database.generation=none

# ===================================================
# PERFIL DE PRODUÇÃO (PADRÃO - USADO PELO DOCKER)
# ===================================================
# Conecta ao serviço 'db' dentro da rede do Docker
%prod.quarkus.datasource.jdbc.url=jdbc:postgresql://db:5432/simulacoes_db
%prod.quarkus.datasource.consulta.jdbc.url=jdbc:sqlserver://dbhackathon.database.windows.net:1433;databaseName=hack

# URL para desenvolvimento (quarkus:dev)
# Para funcionar, inicie o contêiner do banco de dados -> "docker compose up db"
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/simulacoes_db
%dev.quarkus.datasource.consulta.jdbc.url=jdbc:sqlserver://dbhackathon.database.windows.net:1433;databaseName=hack

# ===================================================
# PERFIL DE TESTE (USADO PELO 'mvn test' E 'mvn package')
# ===================================================
# Habilita explicitamente o Dev Services. Como não há URL global para sobrescrever,
# o Dev Services se torna a única opção para os testes, o que resolve o conflito.
%test.quarkus.datasource.devservices.enabled=true
%test.quarkus.datasource.consulta.devservices.enabled=true

# ===================================================
# EventHub
# ===================================================
eventhub.connection-string=Endpoint=sb://eventhack.servicebus.windows.net/;SharedAccessKeyName=hack;SharedAccessKey=HeHeVaVqyVkntO2FnjQcs2Ilh/4MUDo4y+AEhKp8z+g=;EntityPath=simulacoes

# ===================================================
# Desabilita health check padrão para mostrar somente o personalizado
# ===================================================
quarkus.datasource.health.enabled=false

quarkus.swagger-ui.always-include=true

# ===================================================
# CONFIGURAÇÕES DO POOL DE CONEXÕES (AGROAL)
# ===================================================

# Habilita a coleta de métricas para o pool de conexões. Essencial para o tuning.
quarkus.datasource.metrics.enabled=true
quarkus.datasource."consulta".metrics.enabled=true

# --- Pool para o datasource padrão (PostgreSQL - 'simulacoes-db') ---
quarkus.datasource.jdbc.max-size=20
quarkus.datasource.jdbc.min-size=5
quarkus.datasource.jdbc.initial-size=5
quarkus.datasource.acquisition-timeout=5
quarkus.datasource.jdbc.validation-query-sql="SELECT 1"


# --- Pool para o datasource nomeado (SQL Server - 'produtos-db') ---
quarkus.datasource.consulta.jdbc.max-size=10
quarkus.datasource.consulta.jdbc.min-size=2
quarkus.datasource.consulta.jdbc.initial-size=2
quarkus.datasource.consulta.acquisition-timeout=5
quarkus.datasource.consulta.jdbc.validation-query-sql="SELECT 1"

# ===================================================
# MICROMETER (PROMETHEUS)
# ===================================================
quarkus.micrometer.export.prometheus.enabled=true

#PARA RODAR DOCKER
#./mvnw package
#docker compose up --build